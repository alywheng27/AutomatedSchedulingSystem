<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPrintMasterList.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YGFm1KFcxFwAAAAASUVORK5CYII=
</value>
  </data>
</root>